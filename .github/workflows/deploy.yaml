name: CI/CD Pipeline

# Указываем триггеры: при пуше в ветку main и создании pull request'ов
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to deploy'
        required: true


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh       # Создаем директорию .ssh, если она не существует
        ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ""  # Генерация SSH-ключа
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts  # Сканирование и добавление ключа сервера в known_hosts
        # Копируем публичный ключ на сервер
        sshpass -p '${{ secrets.SERVER_PASSWORD }}' ssh-copy-id -o StrictHostKeyChecking=no root@${{ secrets.SERVER_HOST }}

    - name: Copy files to VPS
      run: scp -r * root@${{ secrets.SERVER_HOST }}:/root/ecothone

  deploy: 
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.VPS_PASSWORD}}
          script:
            cd ecothone
            echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
            echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
            echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
            echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
            docker compose up -d
